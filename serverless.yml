service: webhook-issue-relay
# app and org for use with dashboard.serverless.com

# env 파일 사용
# https://www.serverless.com/framework/docs/environment-variables/
useDotenv: true
# 프래임워크 버전
frameworkVersion: "2"
configValidationMode: error

# sls 에서 사용하는 플러그인
plugins:
  - serverless-plugin-typescript
  - serverless-offline
  # https://www.serverless.com/plugins/serverless-jest-plugin
  - serverless-jest-plugin
  # - serverless-plugin-dynamodb-autoscaling

custom:
  # service application 내 전역적으로 사용하는 서비스 네임, 기본 리소스명이기도 함
  SERVICE_NAME: ${self:service}-${self:provider.stage}

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ap-northeast-2
  timeout: 30 # optional, in seconds, default is 6
  lambdaHashingVersion: 20201221
  tracing:
    lambda: true
    apiGateway: true
  logRetentionInDays: 90 # Set the default RetentionInDays for a CloudWatch LogGroup
  deploymentBucket:
    blockPublicAccess: true # Prevents public access via ACLs or bucket policies. Default is false
    name: ${env:DEPLOYMENT_BUCKET} # Deployment bucket name. Default is generated by the framework
    maxPreviousDeploymentArtifacts: 10 # On every deployment the framework prunes the bucket to remove artifacts older than this limit. The default is 5
  endpointType: REGIONAL
  iam:
    role:
      name: ${self:custom.SERVICE_NAME}
      # path:
      statements:
        - Effect: Allow
          Action:
            - "sns:*"
          Resource: "*"
        - Effect: Allow
          Action:
            - "s3:*"
          Resource: "*"
        # api.doc will call apigateway api
        - Effect: Allow
          Action:
            - "apigateway:*"
          Resource: "*"
        - Effect: Allow
          Action:
            - "dynamodb:*"
          Resource:
            - "*"
      tags:
        key: lastorder-service
    # deploymentRole: arn:aws:iam::299665028667:role/LastorderDeployer
  apiGateway:
    # restApiId: ${self:custom.SERVICE_NAME}
    resourcePolicy: # Private REST API doesn't have a resource policy attached to i
      - Effect: Allow
        Principal: "*"
        Action: execute-api:Invoke
        Resource: "execute-api:/*"

  environment:
    # https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/node-reusing-connections.html
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    # 기본 : 배포설정, argements 로 입력
    STAGE: ${self:provider.stage}
    # 기본 : labda 타임존 설정
    TZ: "Asia/Seoul"
    #clickup
    CLICKUP_CLIENT_ID: "1234"
    CLICKUP_SECRET_KEY: "1234"
    CLICKUP_API_KEY: "pk_1234"
    DOORAY_API_KEY: "dooray-api 1234" #FromClickup giyong@lastorder.co.kr
    MYROMEMBER_TABLE: !Ref MyroMemberTable
    MYROTASK_TABLE: !Ref MyroTaskTable
functions:
  dooray2clickupSyncTask:
    handler: src/dooray2clickup/syncTask.run
    description: "createser clickup task by dooray"
    events:
      - http:
          path: /dooray2clickup/sync-task/
          method: post
          integration: lambda
          request:
            schemas:
              application/json: request-create-task
          cors:
            origin: "*"
            headers: "*"
          private: false

  clickup2dooraySyncTask:
    handler: src/clickup2dooray/syncTask.run
    description: "클릭업에 등록된 배포 태스크를 두레이로 복사"
    events:
      - http:
          path: /clickup2dooray/sync-task/
          method: post
          integration: lambda
          request:
            schemas:
              application/json: request-create-task
          cors:
            origin: "*"
            headers: "*"
          private: false

resources:
  Description: webhook-issue-relay WebHook 
  Resources:
    MyroMemberTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: myrocompany-members
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    MyroTaskTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: myrocompany-tasks
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1